// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spider.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Req struct {
	Start                string   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb38e26738aa8833, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Req) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type Res struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Res) Reset()         { *m = Res{} }
func (m *Res) String() string { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()    {}
func (*Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb38e26738aa8833, []int{1}
}

func (m *Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Res.Unmarshal(m, b)
}
func (m *Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Res.Marshal(b, m, deterministic)
}
func (m *Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Res.Merge(m, src)
}
func (m *Res) XXX_Size() int {
	return xxx_messageInfo_Res.Size(m)
}
func (m *Res) XXX_DiscardUnknown() {
	xxx_messageInfo_Res.DiscardUnknown(m)
}

var xxx_messageInfo_Res proto.InternalMessageInfo

func (m *Res) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Req)(nil), "proto.Req")
	proto.RegisterType((*Res)(nil), "proto.Res")
}

func init() { proto.RegisterFile("spider.proto", fileDescriptor_cb38e26738aa8833) }

var fileDescriptor_cb38e26738aa8833 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0xc8, 0x4c,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xba, 0x5c, 0xcc,
	0x41, 0xa9, 0x85, 0x42, 0x22, 0x5c, 0xac, 0xc5, 0x25, 0x89, 0x45, 0x25, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x90, 0x00, 0x17, 0x73, 0x6a, 0x5e, 0x8a, 0x04, 0x13, 0x58, 0x0c,
	0xc4, 0x54, 0x92, 0x07, 0x29, 0x2f, 0x16, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x85, 0x6a, 0x80, 0x71, 0x8d, 0xcc, 0xb9, 0x78, 0x83, 0xc1, 0xd6, 0x04, 0xa7, 0x16, 0x95,
	0x65, 0x26, 0xa7, 0x0a, 0xa9, 0x71, 0x71, 0xb9, 0xa7, 0x96, 0x44, 0x64, 0x26, 0xe6, 0x67, 0x94,
	0x26, 0x0a, 0x71, 0x41, 0x6c, 0xd7, 0x0b, 0x4a, 0x2d, 0x94, 0x42, 0xb0, 0x8b, 0x95, 0x18, 0x92,
	0xd8, 0xc0, 0x1c, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0x6b, 0x89, 0x2e, 0xa6, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpiderServiceClient is the client API for SpiderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpiderServiceClient interface {
	GetXiaohua(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error)
}

type spiderServiceClient struct {
	cc *grpc.ClientConn
}

func NewSpiderServiceClient(cc *grpc.ClientConn) SpiderServiceClient {
	return &spiderServiceClient{cc}
}

func (c *spiderServiceClient) GetXiaohua(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/proto.SpiderService/GetXiaohua", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpiderServiceServer is the server API for SpiderService service.
type SpiderServiceServer interface {
	GetXiaohua(context.Context, *Req) (*Res, error)
}

// UnimplementedSpiderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpiderServiceServer struct {
}

func (*UnimplementedSpiderServiceServer) GetXiaohua(ctx context.Context, req *Req) (*Res, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetXiaohua not implemented")
}

func RegisterSpiderServiceServer(s *grpc.Server, srv SpiderServiceServer) {
	s.RegisterService(&_SpiderService_serviceDesc, srv)
}

func _SpiderService_GetXiaohua_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpiderServiceServer).GetXiaohua(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.SpiderService/GetXiaohua",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpiderServiceServer).GetXiaohua(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpiderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.SpiderService",
	HandlerType: (*SpiderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetXiaohua",
			Handler:    _SpiderService_GetXiaohua_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "spider.proto",
}
